runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
s = rep(character(), 10)
s = append(s, 3)
s = append(s, 4)
s1 = rep(character(), 10)
s1 = rep(character(), 3)
s1 = append(s1, 2)
s1 = append(s1, 2)
s1 = append(s1, 2)
s1 = append(s1, 2)
s1 = append(s1, 2)
s1 = append(s1, 2)
s1 = character(50)
s !%in% 4
s %in% 4
s %!in% 4
s !(%in%) 4
!(s %in% 4)
which(s > 0)
which(s1 > 0)
length(which(s1 > 0))
length(which(s1 >+ 0))
length(which(s1 >= 0))
mm = matrix(nrow = 5, ncol = 10)
View(mm)
t = 1:10
mm[1,] = 2t
mm[1,] = 2 * t
t = 1:9
mm[2,] = 3 * t
mm[2, length(t)] = 3 * t
mm[2, 1:length(t)] = 3 * t
which(mm[,1] > 0)
df = data.frame("mm" = mm)
View(df)
s = 9 + t
View(df)
substrates = rep(character(), 50)
pt = matrix(nrow = 50, ncol = interval)
pt_error = matrix(nrow = 50, ncol = interval)
slopes = rep(character(), 50)
intercepts = rep(character(), 50)
interval = 50
substrates = rep(character(), 50)
pt = matrix(nrow = 50, ncol = interval)
pt_error = matrix(nrow = 50, ncol = interval)
slopes = rep(character(), 50)
intercepts = rep(character(), 50)
df = data.frame("substrates" = substrates, "pt" = pt, "pt_error" = pt_error, "slopes" = slopes, "intercepts" = intercepts)
View(pt)
View(pt_error)
substrates = character(50)
pt = matrix(nrow = 50, ncol = interval)
pt_error = matrix(nrow = 50, ncol = interval)
slopes = character(50)
intercepts = character(50)
df = data.frame("substrates" = substrates, "pt" = pt, "pt_error" = pt_error, "slopes" = slopes, "intercepts" = intercepts)
View(df)
t = 1:50
pt_1 = 2 * t
df$pt[1] = pt_1
View(df)
df$pt.1 = pt_1
View(df)
df$pt[[1]] = 3 * t
df[,2]
df$pt
i = 1
df$pt.i
df$pt.4
View(df)
substrates = character(40)
pt = matrix(nrow = 40, ncol = interval)
pt_error = matrix(nrow = 40, ncol = interval)
slopes = character(40)
intercepts = character(40)
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt" = pt, "pt_error" = pt_error)
View(df)
df[1,pt]
df[1, "pt"]
d
df[1,1]
df[1,1] == NULL
if(df[1,1]==NULL) TRUE else Flase
if(df[1,1]==NULL) TRUE else False
if(df[1,1]==NULL){TRUE}else {False}
if(df[1,1]==NULL){print TRUE}else {print False}
2 + 4 > 0
df[1,1] >= 0
df[1,4] == NA
is.na(df[1,4])
is.null(df[1,1])
t = seq(0, 1000, length.out = interval)
df[1, 4:53]
df[1, 4:53] = t
View(df)
df[1, 4:53] = 2 *t
df[1, 4:53] = 3 *t
df[1, 4:53] = 4 *t
df[1, 4:53] = t
df[3, 4:53] = 2 *t
df[3, 4:53] = 3 *t
df[3, 4:53] = 2 *t
df[3, 4:53] = 3 *t
df[2, 4:53] = 2 *t
df[4, 4:53] = 4 *t
which(df[,4] >= 0)
which(df[,1] >= 0)
length(which(df[,1] >= 0))
s = c(40)
s = rep(na, 40)
s = rep(NA, 40)
which(s > 0)
darui = function(){ 1 + time_max}
time_max = 100-
0
darui()
View(df)
df$intercepts
matlines(x = t, y = file[which(file[,4] >= 0), 4 + time_max:3 + time + time_max], type = "p", pch = 1, col = "black")
runApp('DePauw/Summer2019/Enzyme')
runApp()
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
out = list("pt" = pt,
"pt_error" = pt_error,
"t" = t,
"time" = time,
"pinf_ratio" = pinf_ratio,
"vapp" = vapp,
"kmapp" = kmapp,
"k1" = k1,
"k_1" = k_1,
"k2"  = k2,
"ki1" = ki1,
"ki2" = ki2,
"s" = s,
"e" = e,
"i" = i,
"slopes" = slopes,
"intercepts" = intercepts,
"slopes_error" = slopes_error,
"intercepts_error" = intercepts_error,
)
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp()
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
View(mm)
time = 500
length(which(df[,4] >= 0)) + 1, 4:time+3] = seq(1, time)
runApp('DePauw/Summer2019/Enzyme')
View(df)
which(df[,4]>=0)
length(which(df[,4]>=0)) + 1
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
substrate = rep(NA, 40)
substrates = rep(NA, 40)
substrates[1] = 1
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
count = 1
file = lambert("s" = 1, "e" = 100 * 10^(-6), "time" =  time)
file = lambertPt("s" = 1, "e" = 100 * 10^(-6), "time" =  time)
file$pt
runApp('DePauw/Summer2019/Enzyme')
time_max =1000
df[count, 5 + time_max : time + 5 + time_max]= file$pt
substrates = rep(NA, 40)
pt = matrix(nrow = 40, ncol = time_max + 1)
pt_error = matrix(nrow = 40, ncol = time_max + 1)
slopes = rep(NA, 40)
intercepts = rep(NA, 40)
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
df[count, 5 + time_max : time + 5 + time_max]= file$pt
View(df)
substrates = rep(NA, 40)
pt = matrix(nrow = 40, ncol = time_max + 1)
pt_error = matrix(nrow = 40, ncol = time_max + 1)
slopes = rep(NA, 40)
intercepts = rep(NA, 40)
substrates[1] = 1
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
df[count, 5 + time_max : time + 5 + time_max]= file$pt
runApp('DePauw/Summer2019/Enzyme')
time = 20
df[count, 5 + time_max : time + 5 + time_max]= file$pt
df[count, 4 : 4 + time] = file$pt_error
shiny::runApp('DePauw/Summer2019/Enzyme copy')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme copy')
substrates = rep(NA, 40)
pt = matrix(nrow = 40, ncol = time_max + 1)
pt_error = matrix(nrow = 40, ncol = time_max + 1)
slopes = rep(NA, 40)
intercepts = rep(NA, 40)
count = 0
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
km = 1
k2 = 50
pinf_ratio = 0.9818
sd = 0.03
s_max = 10
time_max = 1000
substrates = rep(NA, 40)
pt = matrix(nrow = 40, ncol = time_max + 1)
pt_error = matrix(nrow = 40, ncol = time_max + 1)
slopes = rep(NA, 40)
intercepts = rep(NA, 40)
count = 0
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
count = count + 1
e_2 = 100 * 10^(-6)
time = 20
file = lambertPt("s" = input$s_2, "e" = e_2, "time" = time, "k2" = k2, "km" = km, "pinf_ratio" = pinf_ratio, "sd" = sd)
file = lambertPt("s" = 2, "e" = e_2, "time" = time, "k2" = k2, "km" = km, "pinf_ratio" = pinf_ratio, "sd" = sd)
values$df$substrates[count] = 2
df$substrates[count] = 2
df[count, 5 + time_max : 5 + time_max + time]= file$pt
length(file$pt)
5 + time_max + time - 5 + time_max
5 + time_max + time - (5 + time_max)
df[count, 6 + time_max : 6 + time_max + time + 1]= file$pt
6 + time_max + time + 1
6 + time_max
1027 - 1006
df[1, 1006:1027] = file$pt
View(df)
length(file$pt_error)
1027 - 1005
4 + time - 4
4 + time + 1 - 4
df[1, 4:24] = file$pt_error
values$df[count, 4 : 4 + time] = file$pt_error
df[count, 4 : 4 + time] = file$pt_error
df[1, 4:24] = file$pt_error
df[count, 4:4+time] = file$pt_error
df[1, 4:24] = file$pt_error
df[count, 4:4+time] = file$pt_error
df[count, 4:(4+time)] = file$pt_error
df[count, (5 + time_max) : (5 + time_max + time)]= file$pt
df[count, 4 : (4 + time)] = file$pt_error
runApp('DePauw/Summer2019/Enzyme')
color = unlist(lapply(file$slopes/vapp, change_color))
runApp('DePauw/Summer2019/Enzyme')
t = seq(0, time)
length(t)
file[, 4:(4 + time)]
file[1:1, 4:(4+time)]
file[1, 4:(4+time)]
df[, 4:(4+time)]
df[1:count, 4:(4 + time)]
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
1: nrow(df)
runApp('DePauw/Summer2019/Enzyme')
source('~/DePauw/Summer2019/Enzyme/lambertMM.R')
test = lambertMM()
substrates = c(2, 1, 4)
test = lambertMM(file = substrates)
df = data.frame("substrates" = substrates)
test = lambertMM(file = df)
View(test)
View(test)
test = seq(1,10)
test
t(te)st
t(test)
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
View(file)
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
substrates = rep(NA, 40)
pt = matrix(nrow = 40, ncol = time_max + 1)
pt_error = matrix(nrow = 40, ncol = time_max + 1)
slopes = rep(NA, 40)
intercepts = rep(NA, 40)
count = 0
df = data.frame("substrates" = substrates, "slopes" = slopes, "intercepts" = intercepts, "pt_error" = pt_error, "pt" = pt)
count = count + 1
e_2 = 100 * 10^(-6)
time = input$time_2
time = 20
file = lambertPt("s" = 2, "e" = e_2, "time" = time, "k2" = k2, "km" = km, "pinf_ratio" = pinf_ratio, "sd" = sd)
df$substrates[count] = 2
df[count, (5 + time_max) : (5 + time_max + time)]= file$pt
df[count, 4 : (4 + time)] = file$pt_error
df$slopes[count] = formatC(file$slopes_error, format = "e", digits = 3
)
df$intercepts[count] = file$intercepts_error
View(df)
yval1 = df$intercepts + df$slopes * 0
df$intercepts
as.numeric(df$intercepts[1:count])
yval1 = as.numeric(file$intercepts[1:count]) + as.numeric(file$slopes[1:count]) * 0
yval2 = as.numeric(file$intercepts[1:count]) + as.numeric(file$slopes[1:count]) * time
yvalues = rbind(yval1, yval2)
color = unlist(lapply(as.numeric(file$slopes[1:count])/vapp, change_color))
vapp = 500 * 10^(-6)
color = unlist(lapply(as.numeric(file$slopes[1:count])/vapp, change_color))
xval = matrix(data = c(0, time), ncol = 1)
matlines(x = xval, y = yvalues, type = "l", lty = 2, lwd = 2, col = color)
View(xval)
xval = t
matlines(x = t(t), y = yvalues, type = "l", lty = 2, lwd = 2, col = color)
View(yvalues)
xval = matrix(data = c(0, time), ncol = 1)
matlines(x = xval, y = yvalues, type = "l", lty = 2, lwd = 2, col = color)
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp()
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
substrates2 = rep(NA, 20)
pt2 = matrix(nrow = 20, ncol = time_max + 1)
pt_error2 = matrix(nrow = 20, ncol = time_max + 1)
slopes2 = rep(NA, 20)
intercepts2 = rep(NA, 20)
km = 1
k2 = 50
pinf_ratio = 0.9818
sd = 0.03
s_max = 10
time_max = 10000
substrates2 = rep(NA, 20)
pt2 = matrix(nrow = 20, ncol = time_max + 1)
pt_error2 = matrix(nrow = 20, ncol = time_max + 1)
slopes2 = rep(NA, 20)
intercepts2 = rep(NA, 20)
df = data.frame("substrates" = substrates2, "slopes" = slopes2, "intercepts" = intercepts2, "pt_error" = pt_error2, "pt" = pt2
)
count = -0
count = 0
df$substrates[(count + 1)] = 2
file = lambertPt(s = 2, e = a100*10, time = 4000, k2 = k2, km = km, s_max = s_max, pinf_ratio = pinf_ratio, sd = sd)
file = lambertPt(s = 2, e = 100*10^(-6), time = 4000, k2 = k2, km = km, s_max = s_max, pinf_ratio = pinf_ratio, sd = sd)
df[(count + 1), (5 + time_max) : (5 + time_max + time2)]= file$pt
time2 = 4000
time2 = 4000
df[(count + 1), (5 + time_max) : (5 + time_max + time2)]= file$pt
df[(count + 1), 4 : (4 + time2)] = file$pt_error
df$slopes[(count + 1)] = formatC(file$slopes_error, format = "e", digits = 3)
df$intercepts[(count + 1)] = file$intercepts_error
df$slopes = NA
View(df)
df$substrates = NA
df$pt = NA
df$pt_error = NA
df[1,] = NA
df = NA
substrates2 = rep(NA, 20)
pt2 = matrix(nrow = 20, ncol = time_max + 1)
pt_error2 = matrix(nrow = 20, ncol = time_max + 1)
slopes2 = rep(NA, 20)
intercepts2 = rep(NA, 20)
df = data.frame("substrates" = substrates2, "slopes" = slopes2, "intercepts" = intercepts2, "pt_error" = pt_error2, "pt" = pt2)
df[,] = NA
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
matlines(x = xval, y = yvalues, type = "l", lty = 2, lwd = 3, col = color)
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
s = seq(0, time, steps = 100)
s = seq(0, 10, steps = 100)
s = seq(0, 10, length.out = 100)
runApp('DePauw/Summer2019/Enzyme')
runApp()
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
s = seq(0, 20, length.out = 4000)
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
4 %*% x = 8
solve(4 %*% x = 8)
solve(4, 8)
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
s = seq(0, 20, by = 0.1)
s = seq(0, 10.01, by = 0.1)
s = seq(0, 10.1, by = 0.1)
(10.01 - 0)/0.1 + 1
s = seq(0, 10.01, by = 0.1)
v = 1:10
v[1.2]
v[1.9]
runApp('DePauw/Summer2019/Enzyme')
length2 = formatC((15/interval + 1), format = "d")
length2 = formatC((15/0.1 + 1), format = "d")
m = 1
length2 = as.numeric(formatC((15/0.1 + 1), format = "d"))
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp()
runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
shiny::runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
runApp('DePauw/Summer2019/Enzyme')
